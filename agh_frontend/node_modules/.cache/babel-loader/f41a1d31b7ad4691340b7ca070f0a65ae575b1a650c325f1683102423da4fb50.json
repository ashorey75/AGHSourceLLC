{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashor\\\\AGHSource\\\\agh_frontend\\\\src\\\\user\\\\pages\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState([]);\n  useEffect(() => {\n    //useEffect does not love the idea of a promise so it makes more sense to\n    //create a function inside that can use async\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/products`); // fetch by default will use a get request and we dont need any headers since we arent sending data\n\n        setLoadedUsers(responseData.products);\n        console.log(responseData.products);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), !isLoading && loadedUsers.map(prod => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"zipper-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zipper-element\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/EXCELLA_m.jpg\",\n            alt: \"YKK Metal Zipper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zipper-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: prod.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: prod.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"zipper-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zipper-element\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/VISLONStandard_m.jpg\",\n            alt: \"YKK Plastic Zipper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zipper-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Plastic Zippers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Plastic Zippers are available in all gauges and configurations from coil to molded plastic; clear synthetic resin to gold or platinum mirror finish; multicolored individual teeth to metallic looking \\u201Csputtering\\u201D coil.  Mixing and matching the three integral parts of the \\u201CZIPPER TRIAD\\u201D \\u2013 Slider / Element / Tape \\u2013 offers the designer an expanded capacity for individual customization.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }, this);\n};\n_s(Users, \"GJ6fUtPIVKDkTl/MRRUCxfn+UvY=\", false, function () {\n  return [useHttpClient];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","Card","useHttpClient","jsxDEV","_jsxDEV","Users","_s","isLoading","error","sendRequest","clearError","loadedUsers","setLoadedUsers","fetchUsers","responseData","process","env","REACT_APP_BACKEND_URL","products","console","log","err","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","asOverlay","map","prod","src","alt","title","description","_c","$RefreshReg$"],"sources":["C:/Users/ashor/AGHSource/agh_frontend/src/user/pages/Products.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //useEffect does not love the idea of a promise so it makes more sense to\r\n    //create a function inside that can use async\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/products`\r\n        ); // fetch by default will use a get request and we dont need any headers since we arent sending data\r\n\r\n        setLoadedUsers(responseData.products);\r\n        console.log(responseData.products)\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n<React.Fragment>\r\n  <ErrorModal error={error} onClear={clearError} />\r\n  {isLoading && (\r\n    <div className=\"center\">\r\n      <LoadingSpinner asOverlay />\r\n    </div>\r\n  )}\r\n\r\n    {!isLoading && loadedUsers.map(prod =>  (\r\n      <Fragment>\r\n        <Card className='zipper-container'>\r\n        <div className='zipper-element'>\r\n          <img src=\"/EXCELLA_m.jpg\" alt=\"YKK Metal Zipper\"/>\r\n        </div>\r\n        <div className='zipper-text'>\r\n          <h2>{prod.title}</h2>\r\n          <p>{prod.description}</p>\r\n        </div>\r\n      </Card>\r\n\r\n        <Card className='zipper-container'>\r\n        <div className='zipper-element'>\r\n          <img src=\"/VISLONStandard_m.jpg\" alt=\"YKK Plastic Zipper\"/>\r\n        </div>\r\n        <div className='zipper-text'>\r\n        <h2>Plastic Zippers</h2>\r\n          <p>\tPlastic Zippers are available in all gauges and configurations from coil to molded plastic; clear synthetic resin to gold or platinum mirror finish; multicolored individual teeth to metallic looking “sputtering” coil.  Mixing and matching the three integral parts of the “ZIPPER TRIAD” – Slider / Element / Tape – offers the designer an expanded capacity for individual customization.</p>\r\n        </div>\r\n      </Card>\r\n      </Fragment>))}\r\n\r\n    \r\n    {/*\r\n    \r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    \r\n    */}</React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}