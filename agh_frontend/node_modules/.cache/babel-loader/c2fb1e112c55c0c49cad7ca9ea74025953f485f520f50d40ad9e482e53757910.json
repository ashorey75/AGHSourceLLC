{"ast":null,"code":"import React,{Fragment,useEffect,useState}from\"react\";import ErrorModal from\"../../shared/components/UIElements/ErrorModal\";import LoadingSpinner from\"../../shared/components/UIElements/LoadingSpinner\";import Card from\"../../shared/components/UIElements/Card\";import{useHttpClient}from\"../../shared/hooks/http-hook\";import{useParams}from\"react-router-dom/cjs/react-router-dom.min\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Users=()=>{const{category}=useParams();const{isLoading,error,sendRequest,clearError}=useHttpClient();const[loadedUsers,setLoadedUsers]=useState([]);useEffect(()=>{//useEffect does not love the idea of a promise so it makes more sense to\n//create a function inside that can use async\nconst fetchUsers=async()=>{try{const responseData=await sendRequest(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/products/\").concat(category));// fetch by default will use a get request and we dont need any headers since we arent sending data\nsetLoadedUsers(responseData);}catch(err){}};fetchUsers();},[sendRequest,category]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ErrorModal,{error:error,onClear:clearError}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"center\",children:/*#__PURE__*/_jsx(LoadingSpinner,{asOverlay:true})}),!isLoading&&loadedUsers.map(prod=>/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(Card,{className:\"zipper-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"zipper-element\",children:/*#__PURE__*/_jsx(\"img\",{src:prod.image||\"/fashion_ave.jpg\",alt:prod.tile})}),/*#__PURE__*/_jsxs(\"div\",{className:\"zipper-text\",children:[/*#__PURE__*/_jsx(\"h2\",{children:prod.title}),/*#__PURE__*/_jsx(\"p\",{children:prod.description})]})]})})),\";\"]});};export default Users;","map":{"version":3,"names":["React","Fragment","useEffect","useState","ErrorModal","LoadingSpinner","Card","useHttpClient","useParams","jsx","_jsx","jsxs","_jsxs","Users","category","isLoading","error","sendRequest","clearError","loadedUsers","setLoadedUsers","fetchUsers","responseData","concat","process","env","REACT_APP_BACKEND_URL","err","children","onClear","className","asOverlay","map","prod","src","image","alt","tile","title","description"],"sources":["C:/Users/ashor/AGHSource/agh_frontend/src/user/pages/Products.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst Users = () => {\r\n  const { category } = useParams();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //useEffect does not love the idea of a promise so it makes more sense to\r\n    //create a function inside that can use async\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/products/${category}`\r\n        ); // fetch by default will use a get request and we dont need any headers since we arent sending data\r\n\r\n        setLoadedUsers(responseData);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest, category]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n\r\n        {!isLoading && loadedUsers.map(prod =>  (\r\n          <Fragment>\r\n            <Card className='zipper-container'>\r\n              <div className='zipper-element'>\r\n                <img src={prod.image || \"/fashion_ave.jpg\"} alt={prod.tile}/>\r\n              </div>\r\n              <div className='zipper-text'>\r\n                <h2>{prod.title}</h2>\r\n                <p>{prod.description}</p>\r\n              </div>\r\n            </Card>\r\n          </Fragment>\r\n        ))};\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE5D,MAAO,CAAAC,UAAU,KAAM,+CAA+C,CACtE,MAAO,CAAAC,cAAc,KAAM,mDAAmD,CAC9E,MAAO,CAAAC,IAAI,KAAM,yCAAyC,CAC1D,OAASC,aAAa,KAAQ,8BAA8B,CAC5D,OAASC,SAAS,KAAQ,2CAA2C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtE,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAAEC,QAAS,CAAC,CAAGN,SAAS,CAAC,CAAC,CAChC,KAAM,CAAEO,SAAS,CAAEC,KAAK,CAAEC,WAAW,CAAEC,UAAW,CAAC,CAAGX,aAAa,CAAC,CAAC,CACrE,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAElDD,SAAS,CAAC,IAAM,CACd;AACA;AACA,KAAM,CAAAmB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAL,WAAW,IAAAM,MAAA,CACjCC,OAAO,CAACC,GAAG,CAACC,qBAAqB,eAAAH,MAAA,CAAaT,QAAQ,CAC3D,CAAC,CAAE;AAEHM,cAAc,CAACE,YAAY,CAAC,CAC9B,CAAE,MAAOK,GAAG,CAAE,CAAC,CACjB,CAAC,CACDN,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACJ,WAAW,CAAEH,QAAQ,CAAC,CAAC,CAE3B,mBACEF,KAAA,CAACZ,KAAK,CAACC,QAAQ,EAAA2B,QAAA,eACblB,IAAA,CAACN,UAAU,EAACY,KAAK,CAAEA,KAAM,CAACa,OAAO,CAAEX,UAAW,CAAE,CAAC,CAChDH,SAAS,eACRL,IAAA,QAAKoB,SAAS,CAAC,QAAQ,CAAAF,QAAA,cACrBlB,IAAA,CAACL,cAAc,EAAC0B,SAAS,MAAE,CAAC,CACzB,CACN,CAEE,CAAChB,SAAS,EAAII,WAAW,CAACa,GAAG,CAACC,IAAI,eACjCvB,IAAA,CAACT,QAAQ,EAAA2B,QAAA,cACPhB,KAAA,CAACN,IAAI,EAACwB,SAAS,CAAC,kBAAkB,CAAAF,QAAA,eAChClB,IAAA,QAAKoB,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAC7BlB,IAAA,QAAKwB,GAAG,CAAED,IAAI,CAACE,KAAK,EAAI,kBAAmB,CAACC,GAAG,CAAEH,IAAI,CAACI,IAAK,CAAC,CAAC,CAC1D,CAAC,cACNzB,KAAA,QAAKkB,SAAS,CAAC,aAAa,CAAAF,QAAA,eAC1BlB,IAAA,OAAAkB,QAAA,CAAKK,IAAI,CAACK,KAAK,CAAK,CAAC,cACrB5B,IAAA,MAAAkB,QAAA,CAAIK,IAAI,CAACM,WAAW,CAAI,CAAC,EACtB,CAAC,EACF,CAAC,CACC,CACX,CAAC,CAAC,GACP,EAAgB,CAAC,CAErB,CAAC,CAED,cAAe,CAAA1B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}